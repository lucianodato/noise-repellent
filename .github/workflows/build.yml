name: build
on:
  push:
    branches:
      - "*"
      - "!DEVELOPMENT"
  pull_request:
    branches:
      - "*"

env:
  PAWPAW_VERSION: 023bccdeffafc4212292072a1eba78d9e709510e
  DEBIAN_FRONTEND: noninteractive
  HOMEBREW_NO_AUTO_UPDATE: 1

jobs:
  ubuntu_20_04:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq meson lv2-dev libfftw3-dev ninja-build
      - name: Build noise-repellent
        shell: bash
        run: |
          meson build --buildtype release --prefix /tmp --libdir /tmp
          ninja -v -C build
          ninja -C build install
          mv /tmp/lv2/nrepellent.lv2 ./nrepellent.lv2
      - name: Set sha8
        id: slug
        run: echo "::set-output name=sha8::$(echo ${{ github.sha }} | cut -c1-8)"
      - uses: actions/upload-artifact@v2
        with:
          name: noise-repellent-ubuntu-20.04-${{ github.event.pull_request.number || steps.slug.outputs.sha8 }}
          path: ~/work/noise-repellent/noise-repellent/nrepellent.lv2

  macos_universal:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds/builds
            ~/PawPawBuilds/downloads
            ~/PawPawBuilds/targets
          key: macos-universal
      - name: Set up dependencies
        run: |
          brew install meson ninja
      - name: Fix up Xcode
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s /Applications/Xcode_12.3.app
      - name: Bootstrap macOS universal
        shell: bash
        run: |
          if [ ! -d PawPaw ]; then
            git clone https://github.com/DISTRHO/PawPaw.git
          fi
          ./PawPaw/bootstrap-plugins.sh  macos-universal && ./PawPaw/.cleanup.sh macos-universal
      - name: Build noise-repellent
        shell: bash
        run: |
          pushd PawPaw && source local.env macos-universal && popd
          meson build --buildtype release --prefix /tmp --libdir /tmp
          ninja -v -C build
          ninja -C build install
          mv /tmp/lv2/nrepellent.lv2 ./nrepellent.lv2
      - name: Set sha8
        id: slug
        run: echo "::set-output name=sha8::$(echo ${{ github.sha }} | cut -c1-8)"
      - uses: actions/upload-artifact@v2
        with:
          name: noise-repellent-macOS-universal-${{ github.event.pull_request.number || steps.slug.outputs.sha8 }}
          path: ~/work/noise-repellent/noise-repellent/nrepellent.lv2

  macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds/builds
            ~/PawPawBuilds/downloads
            ~/PawPawBuilds/targets
          key: macos
      - name: Set up dependencies
        run: |
          brew install meson ninja
      - name: Bootstrap macOS intel
        shell: bash
        run: |
          if [ ! -d PawPaw ]; then
            git clone https://github.com/DISTRHO/PawPaw.git
          fi
          ./PawPaw/bootstrap-plugins.sh macos && ./PawPaw/.cleanup.sh macos
      - name: Build noise-repellent
        shell: bash
        run: |
          pushd PawPaw && source local.env macos && popd
          meson build --buildtype release --prefix /tmp --libdir /tmp
          ninja -v -C build
          ninja -C build install
          mv /tmp/lv2/nrepellent.lv2 ./nrepellent.lv2
      - name: Set sha8
        id: slug
        run: echo "::set-output name=sha8::$(echo ${{ github.sha }} | cut -c1-8)"
      - uses: actions/upload-artifact@v2
        with:
          name: noise-repellent-macOS-intel-${{ github.event.pull_request.number || steps.slug.outputs.sha8 }}
          path: ~/work/noise-repellent/noise-repellent/nrepellent.lv2

  win32:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds/builds
            ~/PawPawBuilds/debs
            ~/PawPawBuilds/downloads
            ~/PawPawBuilds/targets
          key: win32
      - name: Restore debian packages cache
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: Fix GitHub's mess
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: Set up dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt-get install -qy build-essential meson mingw-w64 \
            binutils-mingw-w64-i686 g++-mingw-w64-i686 wine-stable:i386 wine-binfmt \
      - name: Cache debian packages
        run: |
          mkdir -p ~/PawPawBuilds/debs && \
          sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Bootstrap win32 cross-compiled
        shell: bash
        run: |
          if [ ! -d PawPaw ]; then
            git clone https://github.com/DISTRHO/PawPaw.git
          fi
          ./PawPaw/bootstrap-plugins.sh win32 && ./PawPaw/.cleanup.sh win32
      - name: Build noise-repellent
        shell: bash
        run: |
          pushd PawPaw && source local.env win32 && popd
          wineboot -u
          meson build --buildtype release --prefix /tmp --libdir /tmp --cross-file $PWD/meson/win32.ini
          ninja -v -C build
          ninja -C build install
          mv /tmp/lv2/nrepellent.lv2 ./nrepellent.lv2
      - name: Set sha8
        id: slug
        run: echo "::set-output name=sha8::$(echo ${{ github.sha }} | cut -c1-8)"
      - uses: actions/upload-artifact@v2
        with:
          name: noise-repellent-win32-${{ github.event.pull_request.number || steps.slug.outputs.sha8 }}
          path: ~/work/noise-repellent/noise-repellent/nrepellent.lv2

  win64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds/builds
            ~/PawPawBuilds/debs
            ~/PawPawBuilds/downloads
            ~/PawPawBuilds/targets
          key: win32
      - name: Restore debian packages cache
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: Fix GitHub's mess
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt-get install -qy build-essential meson mingw-w64 \
            binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64  wine-stable wine-binfmt \
      - name: Cache debian packages
        run: |
          mkdir -p ~/PawPawBuilds/debs && \
          sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Bootstrap win64 cross-compiled
        shell: bash
        run: |
          if [ ! -d PawPaw ]; then
            git clone https://github.com/DISTRHO/PawPaw.git
          fi
          ./PawPaw/bootstrap-plugins.sh win64 && ./PawPaw/.cleanup.sh win64
      - name: Build noise-repellent
        shell: bash
        run: |
          pushd PawPaw && source local.env win64 && popd
          wineboot -u
          meson build --buildtype release --prefix /tmp --libdir /tmp --cross-file $PWD/meson/win64.ini
          ninja -v -C build
          ninja -C build install
          mv /tmp/lv2/nrepellent.lv2 ./nrepellent.lv2
      - name: Set sha8
        id: slug
        run: echo "::set-output name=sha8::$(echo ${{ github.sha }} | cut -c1-8)"
      - uses: actions/upload-artifact@v2
        with:
          name: noise-repellent-win32-${{ github.event.pull_request.number || steps.slug.outputs.sha8 }}
          path: ~/work/noise-repellent/noise-repellent/nrepellent.lv2
